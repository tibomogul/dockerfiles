FROM ubuntu:24.04
RUN touch /var/mail/ubuntu && chown ubuntu /var/mail/ubuntu && userdel -r ubuntu

RUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
  build-essential \
  ca-certificates \
  ca-certificates-java \
  curl \
  git \
  gnupg \
  jq \
  locales \
  lsb-release \
  libffi-dev \
  libpq-dev \
  libreadline-dev \
  libsqlite3-dev \
  libssl-dev \
  libvips \
  libyaml-dev \
  openjdk-11-jre \
  openssh-client \
  pkg-config \
  postgresql-client \
  redis \
  ruby-dev \
  tzdata \
  vim-tiny \
  wget \
  zip \
  zlib1g-dev


# https://github.com/jekyll/jekyll/issues/4268#issuecomment-167406574
RUN dpkg-reconfigure locales && \
  locale-gen C.UTF-8 && \
  /usr/sbin/update-locale LANG=C.UTF-8

# Install needed default locale for Makefly
RUN echo 'en_US.UTF-8 UTF-8' >> /etc/locale.gen && \
  locale-gen

# Set default locale for the environment
ENV LC_ALL C.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Use bash as the default shell, and specify a login shell so that .profile is
# sourced when the shell starts
SHELL ["/bin/bash", "-l", "-c"]

# Make sure you define DOCKER_UID and DOCKER_GID to match the user IDs used on your system,
# so that your volume mappings work with your user
ARG build_user_name=user
ENV USER_NAME=$build_user_name
ARG DOCKER_UID=1000
ARG DOCKER_GID=1000
RUN groupadd -g $DOCKER_GID $USER_NAME
RUN useradd $USER_NAME -u $DOCKER_UID -g $DOCKER_GID --create-home --shell /bin/bash

USER ${USER_NAME}:${USER_NAME}
WORKDIR /home/$USER_NAME

ARG build_node_version=20.16.0
ENV NODE_VERSION=$build_node_version
ARG NVM_DIR=/home/${USER_NAME}/.nvm
ARG build_nvm_install_version=v0.40.0
ENV NVM_INSTALL_VERSION=$build_nvm_install_version

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_INSTALL_VERSION/install.sh | bash

# We need to source nvm.sh as the installer copies sourcing to .bashrc
RUN . "$NVM_DIR/nvm.sh" \
  && nvm install ${NODE_VERSION} \
  && nvm use v${NODE_VERSION} \
  && nvm alias default v${NODE_VERSION}

# Add this to .profile instead of .bashrc so that its used when bash loads
RUN echo 'PATH=$HOME/.nvm/versions/node/v${NODE_VERSION}/bin/:$PATH' \
  >> /home/${USER_NAME}/.profile


ARG build_ruby_version=3.3.4
ENV RUBY_VERSION=$build_ruby_version

RUN git clone https://github.com/rbenv/rbenv.git /home/${USER_NAME}/.rbenv
RUN git clone https://github.com/rbenv/ruby-build.git /home/${USER_NAME}/.rbenv/plugins/ruby-build

# Add this to .profile instead of .bashrc so that its used when bash loads
RUN echo 'PATH=$HOME/.rbenv/plugins/ruby-build/bin:$HOME/.rbenv/bin:$PATH' \
  >> /home/${USER_NAME}/.profile
RUN echo 'eval "$($HOME/.rbenv/bin/rbenv init -)"' >> /home/${USER_NAME}/.profile

# No need to source .bashrc or .profile here, as its loaded by bash
RUN rbenv install ${RUBY_VERSION} \
  && rbenv global ${RUBY_VERSION}

RUN echo 'gem: --no-document' >> /home/${USER_NAME}/.gemrc

CMD ["sleep", "infinity"]
